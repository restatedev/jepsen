name: Set up Restate Jepsen test suite and cluster
description: "Provisiongs Jepsen worker nodes and sets up the test suite execution environment."
inputs:
  ref:
    description: "Git ref to use for test suite"
    required: false
    default: ""
  restateImageId:
    description: "Restate image (ignored if PR set)"
    required: false
    default: "ghcr.io/restatedev/restate:main"
  restatePr:
    description: "Use CI Docker image from PR (ignored if commit is set)"
    required: false
  restateCommit:
    description: "Use CI Docker image from Restate commit"
    required: false
  roleArn:
    description: "AWS role to assume"
    required: true
    default: "arn:aws:iam::339713187748:role/github-restatedev-jepsen-actions-role"
  clusterName:
    description: "Jepsen workers cluster AWS stack name"
    required: true
  bucketName:
    description: "Storage bucket for cluster - will be created on-demand if unset"
    required: false
  testConfig:
    description: "Jepsen test run configuration"
    required: false
    default: '{ "workloads": "set-vo", "nemeses": "partition-random-node", "duration": "60", "rate": "10", "concurrency": "5n", "testCount": "1" }'
  workDir:
    description: "Test suite checkout location/Jepsen working directory"
    required: false
    default: "jepsen"

runs:
  using: "composite"

  steps:
    - uses: extractions/setup-just@v2

    - uses: actions/setup-node@v4
      with:
        node-version: "22"

    - uses: actions/setup-java@v4
      with:
        distribution: "temurin"
        java-version: "21"

    - uses: DeLaGuardo/setup-clojure@13.0
      with:
        lein: 2.11.2

    - name: Prepare environment for Jepsen control node
      shell: bash
      run: sudo apt-get update && sudo apt-get install -y gnuplot-nox

    # - name: Create snapshot
    #   uses: WarpBuilds/snapshot-save@v1
    #   with:
    #     alias: "restate-jepsen-control-env-${{ github.sha }}-${{ inputs.ref || 'main' }}"
    #     fail-on-error: true
    #     wait-timeout-minutes: 10

    - uses: actions/checkout@v4
      with:
        repository: restatedev/jepsen
        ref: ${{ inputs.ref }}
        path: ${{ inputs.workDir }}

    - name: Build SDK services
      working-directory: ./${{ inputs.workDir }}
      run: just make-services
      shell: bash

    - name: Fetch Jepsen dependencies
      working-directory: ./${{ inputs.workDir }}
      run: lein deps
      shell: bash

    - name: Create test cluster
      shell: bash
      id: create-cluster
      working-directory: ./${{ inputs.workDir }}
      run: |
        SOURCE_IP=$(curl -s https://checkip.amazonaws.com)
        just create-aws-cluster "${{ inputs.clusterName }}" "${SOURCE_IP}/32" "${{ inputs.bucketName }}"
