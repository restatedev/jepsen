name: Run Restate Jepsen tests
on:
  push:
    branches: [ "main" ]
  pull_request:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      ref:
        description: "Git ref for test suite"
        required: false
        default: 'main'
      restateImageId:
        description: 'Restate image (ignored if PR# set)'
        required: false
        default: 'ghcr.io/restatedev/restate:main'
        type: string
      restatePr:
        description: 'Use CI Docker image from PR# (ignored if commit id is set)'
        required: false
        default: ''
        type: string
      restateCommit:
        description: 'Use CI Docker image from commit id'
        required: false
        default: ''
        type: string
      testConfig:
        description: 'JSON object containing all test parameters'
        required: false
        default: '{ "workloads": "set-vo", "nemeses": "partition-random-node", "duration": "120", "rate": "10", "concurrency": "5n", "testCount": "3" }'
      retainCluster:
        description: 'Retain the AWS worker node cluster after test'
        required: false
        type: boolean

permissions:
  id-token: write
  contents: read

jobs:
  jepsen-tests:
    # id tokens are not available on forks
    if: github.event.repository.fork == false
    runs-on: warp-ubuntu-latest-x64-4x
    concurrency:
      group: singleton

    steps:
    - uses: actions/checkout@v4
      with:
        repository: restatedev/jepsen
        sparse-checkout: |
          .github

    - name: Run Jepsen tests
      uses: ./.github/actions/run-tests
      with:
        ref: ${{ inputs.ref }}
        restateImageId: ${{ inputs.restateImageId }}
        restatePr: ${{ inputs.restatePr }}
        restateCommit: ${{ inputs.restateCommit || '{ "workloads": "set-vo", "nemeses": "partition-random-node", "duration": "120", "rate": "10", "concurrency": "5n", "testCount": "3" }' }}
        clusterName: jepsen-cluster-restatedev-jepsen
        roleArn: 'arn:aws:iam::339713187748:role/github-restatedev-jepsen-actions-role'
        testConfig: ${{ inputs.testConfig }}
        retainCluster: ${{ inputs.retainCluster }}
