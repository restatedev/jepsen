name: Run Restate Jepsen tests
on:
  push:
    branches: [ "main" ]
  pull_request:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      restateImageId:
        description: 'Restate image (ignored if PR set)'
        required: false
        default: 'ghcr.io/restatedev/restate:main'
        type: string
      restatePr:
        description: 'Use CI Docker image from PR (ignored if commit is set)'
        required: false
        default: ''
        type: string
      restateCommit:
        description: 'Use CI Docker image from Restate commit'
        required: false
        default: ''
        type: string
      workloads:
        description: 'Workloads (space-delimited)'
        required: false
        default: 'set-vo'
        type: string
      nemeses:
        description: 'Nemeses (space-delimited)'
        required: false
        default: 'none partition-random-node'
        type: string
      duration:
        description: 'Duration per test, seconds'
        required: false
        default: '30'
        type: string
      rate:
        description: 'Approximate number of requests per second, per thread'
        required: false
        default: '10'
        type: string
      concurrency:
        description: 'Workers - absolute (10) or multiple of nodes (3n)'
        required: false
        default: '5n'
        type: string
      testCount:
        description: 'Test reps'
        required: false
        default: '1'
        type: string
      retainCluster:
        description: 'Retain the AWS worker node cluster after test'
        required: false
        type: boolean

permissions:
  id-token: write
  contents: read

jobs:
  jepsen-tests:
    # id tokens are not available on forks
    if: github.event.repository.fork == false
    runs-on: warp-ubuntu-latest-x64-4x
    concurrency:
      group: singleton

    steps:
    - uses: .github/actions/run-tests
      with:
        restateImageId: ${{ inputs.restateImageId }}
        restatePr: ${{ inputs.restatePr }}
        restateCommit: ${{ github.event.pull_request.head.sha || github.sha }}
        workloads: ${{ inputs.workloads }}
        nemeses: ${{ inputs.nemeses }}
        duration: ${{ inputs.duration }}
        rate: ${{ inputs.rate }}
        concurrency: ${{ inputs.concurrency }}
        testCount: ${{ inputs.testCount }}
        retainCluster: ${{ inputs.retainCluster }}
